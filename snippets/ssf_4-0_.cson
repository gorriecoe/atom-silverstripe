######
#
# 1. SS
#
######

# '.text.html.ss.ssf_4-0_':

######
#
# 2. PHP
#
######

'.text.html.php.ssf_4-0_':
  'Class Page Silverstripe':
    'prefix': 'classpage'
    'body': """
    use SilverStripe\\CMS\\Model\\SiteTree;

    /**
     * ${3:Description}
     *
     * @package silverstripe
     * @subpackage ${4:mysite}
     */
    class $1 extends ${2:Page}
    {
    \t${0}
    }
    """
  'Class Page Silverstripe':
    'prefix': 'classpagecontroller'
    'body': """
    use SilverStripe\\CMS\\Controllers\\ContentController;

    class ${1}_Controller extends ${2:Page}_Controller
    {
    \tpublic function init()
    \t{
    \t\tparent::init();
    \t}
    }
    """
  'Class Model Admin Silverstripe':
    'prefix': 'classmodeladmin'
    'body': """
    /**
     * ${5:Description}
     *
     * @package silverstripe
     * @subpackage ${6:mysite}
     */
    class ${1}Admin extends ModelAdmin
    {
    \t/**
    \t * Managed data objects for CMS
    \t * @var array
    \t */
    \tprivate static \\$managed_models = [
    \t\t\'${2}\'
    \t];

    \t/**
    \t * URL Path for CMS
    \t * @var string
    \t */
    \tprivate static \\$url_segment = \'${3}\';

    \t/**
    \t * Menu title for Left and Main CMS
    \t * @var string
    \t */
    \tprivate static \\$menu_title = \'${4}\';

    \t${0}
    }
    """
  'menu_title':
    'prefix': 'menu_title '
    'body': """
    /**
     * Menu title for Left and Main CMS
     * @var string
     */
    private static \\$menu_title = \'${1}\';${0}
    """
  'menu_icon':
    'prefix': 'menu_icon '
    'body': """
    /**
     * Menu icon for Left and Main CMS
     * @var string
     */
    private static \\$menu_icon = \'${1}\';${0}
    """
  'singular_name':
    'prefix': 'singular_name '
    'body': """
    /**
     * Singular name for CMS
     * @var string
     */
    private static \\$singular_name = \'${1}\';${0}
    """
  'plural_name':
    'prefix': 'plural_name '
    'body': """
    /**
     * Plural name for CMS
     * @var string
     */
    private static \\$plural_name = \'${1}\';${0}
    """
  'db':
    'prefix': 'db '
    'body': """
    /**
     * Database fields
     * @var array
     */
    private static \\$db = [
    \t\'${1}\' => \'${2}\',
    ];${0}
    """
  'has_one':
    'prefix': 'has_one'
    'body': """
    /**
     * Has_one relationship
     * @var array
     */
    private static \\$has_one = [
    \t\'${1}\' => \'${2}\',
    ];${0}
    """
  'has_many':
    'prefix': 'has_many'
    'body': """
    /**
     * Has_many relationship
     * @var array
     */
    private static \\$has_many = [
    \t\'${1}\' => \'${2}\',
    ];${0}
    """
  'many_many':
    'prefix': 'many_many'
    'body': """
    /**
     * Many_many relationship
     * @var array
     */
    private static \\$many_many = [
    \t\'${1}\' => \'${2}\',
    ];${0}
    """
  'many_many_extraFields':
    'prefix': 'many_many_extrafields'
    'body': """
    /**
     * \{@inheritdoc \}
     * @var array
     */
    private static \\$many_many_extraFields = [
    \t\'${1}\' => [
    \t\t\'${2:Sort}\' => \'${3:Int}\'
    \t)
    ];${0}
    """
  'belongs_to':
    'prefix': 'belongs_to'
    'body': """
    /**
     * Belongs_to relationship
     * @var array
     */
    private static \\$belongs_to = [
    \t\'${1}\' => \'${2}\',
  ];
    ${0}
    """
  'belongs_many_many':
    'prefix': 'belongs_many_many'
    'body': """
    /**
     * Belongs_many_many relationship
     * @var array
     */
    private static \\$belongs_many_many = [
    \t\'${1}\' => \'${2}\',
    ];${0}
    """
  'casting':
    'prefix': 'casting'
    'body': """
    /**
     * Defines types to variables from custom functions
     * @var array
     */
    private static \\$casting = [
    \t\'${1}\' => \'${2}\'
  ];
    """
  'defaults':
    'prefix': 'defaults'
    'body': """
    /**
     * Define the default values for all the $db fields
     * @var array
     */
    private static \\$defaults = [
    \t\'${1}\' => \'${2}\'
  ];
    """
  'default_sort':
    'prefix': 'default_sort'
    'body': """
    /**
     * Default sort ordering
     * @var string
     */
    private static \\$default_sort = [\'${1}\' => \'${2:ASC}\'];${0}
    """
  'allowed_children':
    'prefix': 'allowed_children'
    'body': """
    /**
     * Defines the allowed child page types
     * @var array
     */
    private static $allowed_children = [
    \t\'${1}\'
  ];
    """
  'allowed_actions':
    'prefix': 'allowed_actions'
    'body': """
    /**
     * Defines methods that can be called directly
     * @var array
     */
    private static \\$allowed_actions = [
    \t\'${1}\' => ${2:true}
  ];
    """
  'hide_ancestor':
    'prefix': 'hide_ancestor'
    'body': """
    private static \\$hide_ancestor = \'\${1:PageType}\';${0}
    """

  # Scaffolding
  'summary_fields':
    'prefix': 'summary_fields'
    'body': """
    /**
     * Defines summary fields commonly used in table columns
     * as a quick overview of the data for this dataobject
     * @var array
     */
    private static \\$summary_fields = [
    \t'${1}' => '${2}'
  ];
    """
  'searchable_fields':
    'prefix': 'searchable_fields'
    'body': """
    /**
     * Defines a default list of filters for the search context
     * @var array
     */
    private static \\$searchable_fields = [
    \t'${1}' => '${2}'
  ];
    """

  # Permissions
  'canView':
    'prefix': 'canview'
    'body': """
    /**
     * Viewing Permissions
     * @return boolean
     */
    public function canView($member = null)
    {
    \treturn ${1};
    }${0}
    """
  'canEdit':
    'prefix': 'canedit'
    'body': """
    /**
     * Editing Permissions
     * @return boolean
     */
    public function canEdit($member = null)
    {
    \treturn ${1};
    }${0}
    """
  'canDelete':
    'prefix': 'candelete'
    'body': """
    /**
     * Deleting Permissions
     * @return boolean
     */
    public function canDelete($member = null)
    {
    \treturn ${1};
    }${0}
    """
  'canCreate':
    'prefix': 'cancreate'
    'body': """
    /**
     * Creating Permissions
     * @return boolean
     */
    public function canCreate($member = null)
    {
    \treturn ${1};
    }${0}
    """
  'permissionCheck':
    'prefix': 'permissioncheck'
    'body': 'Permission::check(${1:string|array}, ${2:\'any\'}, ${3:$member})${0}'
  'providePermissions':
    'prefix': 'providepermissions'
    'body': """
    /**
     * Return a map of permission codes to add to the dropdown shown in the Security section of the CMS
     * @return array
     */
    public function providePermissions()
    {
    \treturn [
    \t\t'${1:PERMISSION}' => '${2:Title}'
    \t];
    }
    """
